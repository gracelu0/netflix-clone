{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/graceluo/netflix-clone/src/components/accordion/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, createContext, useState } from \"react\";\nimport { Container, Inner, Title, Item, Header, Body } from \"./styles/accordion\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: [/*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Header = _s2(function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  _s2();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(toggleShow => !toggleShow),\n    ...restProps,\n    children: [children, toggleShow ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/icons/cancel.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody({\n  children,\n  ...restProps\n}) {\n  _s3();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this) : null;\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/graceluo/netflix-clone/src/components/accordion/index.js"],"names":["React","useContext","createContext","useState","Container","Inner","Title","Item","Header","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,IANF,QAOO,oBAPP;AASA,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA+C;AAC5D,sBACE,QAAC,SAAD,OAAeA,SAAf;AAAA,2BACE,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBD,S;;AAQxBA,SAAS,CAACL,KAAV,GAAkB,SAASQ,cAAT,CAAwB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACJ,IAAV,MAAiB,SAASQ,aAAT,CAAuB;AAAEH,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAAA;;AAClE,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEa,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA,4BACE,QAAC,IAAD,OAAUJ,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;AASAD,SAAS,CAACH,MAAV,OAAmB,SAASU,eAAT,CAAyB;AAAEN,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAqD;AAAA;;AACtE,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgChB,UAAU,CAACS,aAAD,CAAhD;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMO,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB,CAD9B;AAAA,OAEMH,SAFN;AAAA,eAIGD,QAJH,EAKGI,UAAU,gBACT;AAAK,MAAA,GAAG,EAAC,4BAAT;AAAsC,MAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT;AAAK,MAAA,GAAG,EAAC,yBAAT;AAAmC,MAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;AAkBAL,SAAS,CAACF,IAAV,OAAiB,SAASU,aAAT,CAAuB;AAAEP,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAAA;;AAClE,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgChB,UAAU,CAACS,aAAD,CAAhD;AAEA,SAAOM,UAAU,gBAAG,QAAC,IAAD,OAAUH,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAH,GAA4C,IAA7D;AACD,CAJD","sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\nimport {\n  Container,\n  Inner,\n  Title,\n  Item,\n  Header,\n  Body,\n} from \"./styles/accordion\";\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container {...restProps}>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return (\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>;\n    </ToggleContext.Provider>\n  );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n\n  return (\n    <Header\n      onClick={() => setToggleShow((toggleShow) => !toggleShow)}\n      {...restProps}\n    >\n      {children}\n      {toggleShow ? (\n        <img src=\"../images/icons/cancel.png\" alt=\"Close\" />\n      ) : (\n        <img src=\"../images/icons/add.png\" alt=\"Open\" />\n      )}\n    </Header>\n  );\n};\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n\n  return toggleShow ? <Body {...restProps}>{children}</Body> : null;\n};\n"]},"metadata":{},"sourceType":"module"}